{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\carlo\\\\Desktop\\\\Lolcito\\\\fronted\\\\mainscreen\\\\components\\\\BodyContainer.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/Body.scss';\nimport axios from 'axios';\nimport ChampContainer from './champContainer';\nexport var BodyContainer = function BodyContainer(_ref) {\n  _s();\n\n  var setShowList = _ref.setShowList;\n\n  var _useState = useState(''),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      champions = _useState2[0],\n      setChampions = _useState2[1];\n\n  var _useState3 = useState([]),\n      nexChampList = _useState3[0],\n      setNewChampionsList = _useState3[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, array, eachone;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: 'get',\n              url: 'http://ddragon.leagueoflegends.com/cdn/10.21.1/data/es_MX/champion.json'\n            });\n\n          case 2:\n            response = _context.sent;\n            array = [];\n\n            for (eachone in response.data.data) {\n              array.push(response.data.data[eachone]);\n            }\n\n            setChampions(array);\n            setNewChampionsList(array);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n\n  var handleChange = function handleChange(e) {\n    setState(e.target.value);\n    var newChampList = champions.filter(function (item) {\n      if (item.id.toLowerCase().includes(e.target.value.toLowerCase())) {\n        return item;\n      }\n\n      return;\n    });\n    setNewChampionsList(newChampList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Main,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchContainer,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: state,\n        name: \"champion\",\n        onChange: handleChange,\n        type: \"text\",\n        placeholder: \"Campeon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.ChampsContainer,\n      children: nexChampList.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(ChampContainer, {\n          setShowList: setShowList,\n          data: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(BodyContainer, \"4hI26h0eV49bJYWO6FyNt6EjNzU=\");\n\n_c = BodyContainer;\nexport default BodyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyContainer\");","map":{"version":3,"sources":["C:/Users/carlo/Desktop/Lolcito/fronted/mainscreen/components/BodyContainer.jsx"],"names":["React","useState","useEffect","styles","axios","ChampContainer","BodyContainer","setShowList","state","setState","champions","setChampions","nexChampList","setNewChampionsList","method","url","response","array","eachone","data","push","handleChange","e","target","value","newChampList","filter","item","id","toLowerCase","includes","Main","SearchContainer","ChampsContainer","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmB;AAAA;;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;;AAAA,kBAElBN,QAAQ,CAAC,EAAD,CAFU;AAAA,MAErCO,KAFqC;AAAA,MAE9BC,QAF8B;;AAAA,mBAGVR,QAAQ,CAAC,EAAD,CAHE;AAAA,MAGrCS,SAHqC;AAAA,MAG1BC,YAH0B;;AAAA,mBAIAV,QAAQ,CAAC,EAAD,CAJR;AAAA,MAIrCW,YAJqC;AAAA,MAIvBC,mBAJuB;;AAK5CX,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBE,KAAK,CAAC;AACzBU,cAAAA,MAAM,EAAE,KADiB;AAEzBC,cAAAA,GAAG,EAAE;AAFoB,aAAD,CADtB;;AAAA;AACAC,YAAAA,QADA;AAMLC,YAAAA,KANK,GAMG,EANH;;AAQN,iBAAWC,OAAX,IAAsBF,QAAQ,CAACG,IAAT,CAAcA,IAApC,EAA0C;AACtCF,cAAAA,KAAK,CAACG,IAAN,CAAWJ,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBD,OAAnB,CAAX;AACH;;AAGLP,YAAAA,YAAY,CAACM,KAAD,CAAZ;AACAJ,YAAAA,mBAAmB,CAACI,KAAD,CAAnB;;AAdU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAgBV,EAhBU,CAAT;;AAiBA,MAAMI,YAAY,GAAC,SAAbA,YAAa,CAACC,CAAD,EAAK;AACpBb,IAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA,QAAMC,YAAY,GAACf,SAAS,CAACgB,MAAV,CAAiB,UAAAC,IAAI,EAAE;AACtC,UAAGA,IAAI,CAACC,EAAL,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BR,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeK,WAAf,EAA/B,CAAH,EAAgE;AAC5D,eAAOF,IAAP;AAEH;;AACD;AACH,KANkB,CAAnB;AAOAd,IAAAA,mBAAmB,CAACY,YAAD,CAAnB;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAAC4B,IAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,eAAvB;AAAA,6BACG;AAAO,QAAA,KAAK,EAAExB,KAAd;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,QAAQ,EAAEa,YAA/C;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAAyE,QAAA,WAAW,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAK,MAAA,SAAS,EAAElB,MAAM,CAAC8B,eAAvB;AAAA,gBAEQrB,YAAY,CAACsB,GAAb,CAAiB,UAACP,IAAD,EAAU;AACvB,4BAAO,QAAC,cAAD;AAAgB,UAAA,WAAW,EAAEpB,WAA7B;AAAwD,UAAA,IAAI,EAAEoB;AAA9D,WAA+CA,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAhDM;;GAAMtB,a;;KAAAA,a;AAkDb,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styles from '../styles/Body.scss'\r\nimport axios from 'axios'\r\nimport ChampContainer from './champContainer'\r\nexport const BodyContainer = ({setShowList}) => {\r\n\r\n    const [state, setState] = useState('')\r\n    const [champions, setChampions] = useState([])\r\n    const [nexChampList, setNewChampionsList] = useState([])\r\n    useEffect(async () => {\r\n        const response = await axios({\r\n            method: 'get',\r\n            url: 'http://ddragon.leagueoflegends.com/cdn/10.21.1/data/es_MX/champion.json',\r\n   });\r\n\r\n   const array = []\r\n\r\n        for (const eachone in response.data.data) {\r\n            array.push(response.data.data[eachone])\r\n        }\r\n      \r\n\r\n    setChampions(array)\r\n    setNewChampionsList(array)\r\n\r\n}, [])\r\n    const handleChange=(e)=>{\r\n        setState(e.target.value)\r\n        const newChampList=champions.filter(item=>{\r\n            if(item.id.toLowerCase().includes(e.target.value.toLowerCase())){\r\n                return item\r\n\r\n            }\r\n            return\r\n        })\r\n        setNewChampionsList(newChampList)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Main}>\r\n            <div className={styles.SearchContainer}>\r\n               <input value={state} name=\"champion\" onChange={handleChange} type=\"text\" placeholder=\"Campeon\" />\r\n            </div>\r\n            <div className={styles.ChampsContainer}>\r\n            {\r\n                    nexChampList.map((item) => {\r\n                        return <ChampContainer setShowList={setShowList} key={item.id} data={item}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyContainer"]},"metadata":{},"sourceType":"module"}